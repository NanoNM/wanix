# 定义目标文件名和源文件路径
BOOT_TARGET = boot
SETUP_TARGET = setup
BOOT_SRC = ./boot/$(BOOT_TARGET).asm
SETUP_SRC = ./boot/$(SETUP_TARGET).asm
BUILDPATH = ./build

# 输出文件
BOOT_BIN = $(BUILDPATH)/$(BOOT_TARGET).bin
SETUP_BIN = $(BUILDPATH)/$(SETUP_TARGET).bin
DISK_IMG = $(BUILDPATH)/disk.img  # 统一的磁盘镜像文件名

# 定义工具
NASM = nasm
QEMU = qemu-system-x86_64
DD = dd

# 默认目标：编译并运行
all: run

# 确保build目录存在
$(BUILDPATH):
	mkdir -p $(BUILDPATH)
	@echo "创建build目录: $(BUILDPATH)"

# 汇编生成引导程序二进制文件
$(BOOT_BIN): $(BOOT_SRC) | $(BUILDPATH)
	$(NASM) -f bin $(BOOT_SRC) -o $(BOOT_BIN)
	@echo "引导程序汇编完成: $(BOOT_BIN)"

# 汇编生成setup程序二进制文件
$(SETUP_BIN): $(SETUP_SRC) | $(BUILDPATH)
	$(NASM) -f bin $(SETUP_SRC) -o $(SETUP_BIN)
	@echo "Setup程序汇编完成: $(SETUP_BIN)"

# 创建磁盘镜像并写入两个程序
$(DISK_IMG): $(BOOT_BIN) $(SETUP_BIN)
	$(shell rm -rf $(DISK_IMG))
	# 创建10MB空镜像
	#$(DD) if=/dev/zero of=$(DISK_IMG) bs=1M count=10 status=none
	bximage -q -hd=16 -func=create -sectsize=512 -imgmode=flat $(DISK_IMG)
	# 写入引导扇区(第一个扇区)
	$(DD) if=$(BOOT_BIN) of=$(DISK_IMG) bs=512 seek=0 count=1 conv=notrunc
	# 写入setup程序(第二个扇区)
	$(DD) if=$(SETUP_BIN) of=$(DISK_IMG) bs=512 seek=1 conv=notrunc
	@echo "磁盘镜像创建完成: $(DISK_IMG)"

# 运行模拟器
run_qume: $(DISK_IMG)
	@echo "启动QEMU模拟器..."
	$(QEMU) -m 32M -hda $(DISK_IMG)  # 使用硬盘模式而不是软盘模式

run_bochs: $(DISK_IMG)
	@echo "启动bochs模拟器..."
	~/bochs-2.7/bochs -q -f boch.config  # 使用硬盘模式而不是软盘模式

# 单独编译引导程序
boot: $(BOOT_BIN)

# 单独编译setup程序
setup: $(SETUP_BIN)

# 清理生成的文件
clean:
	rm -rf $(BUILDPATH)
	@echo "清理完成"

# 伪目标
.PHONY: all run clean boot setup
